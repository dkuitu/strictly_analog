-- MySQL Script generated by MySQL Workbench
-- Wed May 17 14:00:18 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema StrictlyAnalog
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema StrictlyAnalog
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `StrictlyAnalog`
  DEFAULT CHARACTER SET utf8;
USE `StrictlyAnalog`;

-- -----------------------------------------------------
-- Table `StrictlyAnalog`.`albums`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `StrictlyAnalog`.`albums`;

CREATE TABLE IF NOT EXISTS `StrictlyAnalog`.`albums` (
  `album_id`     INT          NOT NULL AUTO_INCREMENT,
  `album_name`   MEDIUMTEXT   NOT NULL,
  `album_image`  VARCHAR(255) NOT NULL,
  `album_year`   YEAR         NOT NULL,
  `album_artist` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`album_id`)
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `StrictlyAnalog`.`formats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `StrictlyAnalog`.`formats`;

CREATE TABLE IF NOT EXISTS `StrictlyAnalog`.`formats` (
  `format_id`   INT         NOT NULL AUTO_INCREMENT,
  `format_type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`format_id`)
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `StrictlyAnalog`.`genres`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `StrictlyAnalog`.`genres`;

CREATE TABLE IF NOT EXISTS `StrictlyAnalog`.`genres` (
  `genre_id`   INT         NOT NULL AUTO_INCREMENT,
  `genre_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`genre_id`)
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `StrictlyAnalog`.`albums_has_genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `StrictlyAnalog`.`albums_has_genre`;

CREATE TABLE IF NOT EXISTS `StrictlyAnalog`.`albums_has_genre` (
  `albums_album_id` INT NOT NULL,
  `genre_genre_id`  INT NOT NULL,
  PRIMARY KEY (`albums_album_id`, `genre_genre_id`),
  INDEX `fk_albums_has_genre_genre1_idx` (`genre_genre_id` ASC),
  INDEX `fk_albums_has_genre_albums1_idx` (`albums_album_id` ASC),
  CONSTRAINT `fk_albums_has_genre_albums1`
  FOREIGN KEY (`albums_album_id`)
  REFERENCES `StrictlyAnalog`.`albums` (`album_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_albums_has_genre_genre1`
  FOREIGN KEY (`genre_genre_id`)
  REFERENCES `StrictlyAnalog`.`genres` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `StrictlyAnalog`.`conditions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `StrictlyAnalog`.`conditions`;

CREATE TABLE IF NOT EXISTS `StrictlyAnalog`.`conditions` (
  `condition_id`      INT         NOT NULL AUTO_INCREMENT,
  `condition_quality` VARCHAR(45) NULL,
  PRIMARY KEY (`condition_id`)
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `StrictlyAnalog`.`products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `StrictlyAnalog`.`products`;

CREATE TABLE IF NOT EXISTS `StrictlyAnalog`.`products` (
  `formats_format_id`       INT            NOT NULL,
  `albums_album_id`         INT            NOT NULL,
  `conditions_condition_id` INT            NOT NULL,
  `price`                   DECIMAL(10, 2) NOT NULL,
  `product_id`              INT            NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`product_id`),
  INDEX `fk_products_formats1_idx` (`formats_format_id` ASC),
  INDEX `fk_products_albums1_idx` (`albums_album_id` ASC),
  INDEX `fk_products_conditions1_idx` (`conditions_condition_id` ASC),
  CONSTRAINT `fk_products_formats1`
  FOREIGN KEY (`formats_format_id`)
  REFERENCES `StrictlyAnalog`.`formats` (`format_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_albums1`
  FOREIGN KEY (`albums_album_id`)
  REFERENCES `StrictlyAnalog`.`albums` (`album_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_conditions1`
  FOREIGN KEY (`conditions_condition_id`)
  REFERENCES `StrictlyAnalog`.`conditions` (`condition_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `StrictlyAnalog`.`customers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `StrictlyAnalog`.`customers`;

CREATE TABLE IF NOT EXISTS `StrictlyAnalog`.`customers` (
  `user_id`    INT          NOT NULL AUTO_INCREMENT,
  `email`      VARCHAR(45)  NOT NULL,
  `password`   VARCHAR(255) NOT NULL,
  `first_name` VARCHAR(25)  NOT NULL,
  `last_name`  VARCHAR(25)  NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `user_name_UNIQUE` (`email` ASC)
)
  ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `StrictlyAnalog`.`carts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `StrictlyAnalog`.`carts`;

CREATE TABLE IF NOT EXISTS `StrictlyAnalog`.`carts` (
  `products_product_id` INT NOT NULL,
  `product_qty`         INT NOT NULL DEFAULT 1,
  `customers_user_id`   INT NOT NULL,
  PRIMARY KEY (`products_product_id`, `customers_user_id`),
  INDEX `fk_carts_products1_idx` (`products_product_id` ASC),
  INDEX `fk_carts_customers1_idx` (`customers_user_id` ASC),
  CONSTRAINT `fk_carts_products1`
  FOREIGN KEY (`products_product_id`)
  REFERENCES `StrictlyAnalog`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_carts_customers1`
  FOREIGN KEY (`customers_user_id`)
  REFERENCES `StrictlyAnalog`.`customers` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB;


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
